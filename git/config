[alias]
	outgoing = "!git log --pretty=format:'%C(yellow)%h%Creset %Cred%an%Creset %s' --reverse --no-merges --stat $(git branch -vv --no-color | grep '^\\* ' | grep -v 'no branch' | sed -e 's/^\\* \\([^ \t]\\+\\).*\\[\\([^]:]\\+\\).*/\\2..\\1/;tx;d;:x')"
	incoming = "!git log --pretty=format:'%C(yellow)%h%Creset %Cred%an%Creset %s' --reverse --no-merges --stat $(git branch -vv --no-color | grep '^\\* ' | grep -v 'no branch' | sed -e 's/^\\* \\([^ \t]\\+\\).*\\[\\([^]:]\\+\\).*/\\1..\\2/;tx;d;:x')"
	lg = "log --pretty=custom"
	logr = "log --graph --full-history --pretty=custom"
	st = "status -sb"
	contained = "!git rev-list $2 | ag $(git rev-parse $1)"

	# list all ignored files
	ignored = "ls-files --others -i --exclude-standard"

	# start interactive rebase to prepare local commits to be pushed
	prep = "rebase -i @{u}"

	# Merge GitHub pull request on top of the current branch or,
	# if a branch name is specified, on top of the specified branch

	mpr = "!f() { \
			declare currentBranch=\"$(git symbolic-ref --short HEAD)\"; \
			declare branch=\"${2:-$currentBranch}\"; \
			if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
					git fetch origin refs/pull/$1/head:pr/$1 && \
					git checkout -B $branch && \
					git rebase $branch pr/$1 && \
					git checkout -B $branch && \
					git merge pr/$1 && \
					git branch -D pr/$1 && \
					git commit --amend -m \"$(git log -1 --pretty=%B)\n\nClose #$1\"; \
			fi \
	}; f"

	# Remove the tag with the specified tag name if
	# exists and tag the latest commit with that name

	retag = "!f() { \
			git tag -d "$1" &> /dev/null; \
			git tag $1; \
	}; f"

[color]
	ui = true

[merge]
	ff = false
	tool = vimdiff
	stat = true
	conflictstyle = diff3

[mergetool]
	prompt = false
	keepBackup = false

[diff]
	algorithm = patience
	tool = vimdiff

[diff "bin"]
	# Use `hexdump` to diff binary files
	textconv = hexdump -v -C

[core]
	editor = nvim
	abbrev = 12

[pager]
	diff = diff-so-fancy | less --tabs=2 -RFX
	show = diff-so-fancy | less --tabs=2 -RFX
	log = less --tabs=2 -RFX

[branch]
	autosetuprebase = always

[user]
	name = Leeor Aharon
	email = leeor.aharon@gmail.com

[push]
	followTags = true
	default = current

[pull]
	ff = true

[pretty]
	custom = "%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(blue)<%an>%C(reset) %C(green)(%ar)%C(reset)"
	#									|											 |					 |					 |											 |
	#									|											 |					 |					 |											 └─ date, relative
	#									|											 |					 |					 └─ author name
	#									|											 |					 └─ message
	#									|											 └─ decorations (branch, tag, pointers)
	#									└─ hash (abbreviated)
