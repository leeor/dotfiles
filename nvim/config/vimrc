"      .-.     .-.     .-.     .-.     .-.     .-.     .-.
" `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'
"
" https://github.com/rafi/vim-config

" Runtime and Plugins
" -------------------------------------------------

if &compatible
	set nocompatible
endif

" Set main configuration directory, and where cache is stored.
let $VIMPATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')
let $VARPATH = expand(($XDG_CACHE_HOME ? $XDG_CACHE_HOME : '~/.cache').'/vim')

function! s:source_file(path) abort
	execute 'source' fnameescape($VIMPATH.'/config/'.a:path)
endfunction

function! s:lazy_load_filetype() abort
	if &l:filetype ==# '' && bufname('%') ==# ''
		return
	endif
	redir => filetype_out
	silent! filetype
	redir END
	if filetype_out =~# 'OFF'
		silent! filetype plugin indent on
		syntax enable
		filetype detect
		" For some reason this event isn't being
		" triggered, and theme doesn't load.
		doautoall ColorScheme
	endif
endfunction

" Set augroup
augroup MyAutoCmd
	autocmd!
	" Lazy-loading filetype syntax and highlighting
	autocmd MyAutoCmd FileType,Syntax,BufNewFile,BufNew,BufRead
		\ * call s:lazy_load_filetype()
augroup END

" Initialize base requirements
if has('vim_starting')
	call s:source_file('init.vim')
	if has('nvim')
		call s:source_file('neovim.vim')
	endif
endif

" Initialize vim-plug (package manager)
let s:path = expand('$VARPATH/vim-plug')
let s:plugins_path = 'plugins.vim'
call plug#begin(s:path)
call s:source_file(s:plugins_path)
call plug#end()

" Loading configuration modules {{{
call s:source_file('general.vim')
call s:source_file('terminal.vim')
call s:source_file('filetype.vim')
call s:lazy_load_filetype()
call s:source_file('mappings.vim')
" }}}

set secure
" vim: set ts=2 sw=2 tw=80 noet :
